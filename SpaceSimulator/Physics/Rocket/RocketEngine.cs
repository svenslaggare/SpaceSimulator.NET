using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SpaceSimulator.Physics.Rocket
{
    /// <summary>
    /// Represents a rocket engine
    /// </summary>
    public sealed class RocketEngine
    {
        /// <summary>
        /// The amount of thrust generated by the engine (in newtons)
        /// </summary>
        public double Thrust { get; }

        /// <summary>
        /// The specific impulse (in seconds)
        /// </summary>
        public double SpecificImpulse { get; }

        /// <summary>
        /// The dry mass of the engine (in kg)
        /// </summary>
        public double Mass { get; }

        /// <summary>
        /// Creates a new rocket engine
        /// </summary>
        /// <param name="thrust">The thrust (in newtons)</param>
        /// <param name="specificImpulse">The specific impulse (in seconds)</param>
        /// <param name="mass">The dry mass of the engine (in kg)</param>
        public RocketEngine(double thrust, double specificImpulse, double mass)
        {
            this.Thrust = thrust;
            this.SpecificImpulse = specificImpulse;
            this.Mass = mass;
        }

        /// <summary>
        /// Returns the mass flow rate (kg/s)
        /// </summary>
        public double MassFlowRate
        {
            get { return RocketFormulas.CalculateMassFlowRate(this.Thrust, this.SpecificImpulse); }
        }

        /// <summary>
        /// Returns the effective exhaust velocity
        /// </summary>
        public double EffectiveExhaustVelocity
        {
            get { return this.SpecificImpulse * Constants.StandardGravity; }
        }
    }
}
